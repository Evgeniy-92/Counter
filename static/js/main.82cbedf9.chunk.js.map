{"version":3,"sources":["components/Counter.module.css","reportWebVitals.ts","components/Button.tsx","redux/main-reducer.ts","components/Counter.tsx","components/InstallationInputType.tsx","components/CounterInstallation.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","className","classNameBtn","onClick","onClickBtn","disabled","disabledBtn","valueBtn","initialState","value","startValue","maxValue","messagePointer","changeValueAC","newValue","type","changeStartValueAC","changeMaxValueAC","Counter","dispatch","useDispatch","state","useSelector","counterState","btnIncStyle","error","s","button","btnResetStyle","disInc","disReset","valueStyle","element","message","counterWrapper","buttons","buttonsCounter","InstallationInput","inputFinishStyle","inputStyle","errorInput","installationInputStyle","setPoint","onChange","e","Number","currentTarget","changeValue","CounterInstallation","btnSetStyle","valueAsString","localStorage","getItem","JSON","parse","App","useEffect","maxValueAsString","startValueAsString","setItem","stringify","console","log","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82cbedf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterWrapper\":\"Counter_counterWrapper__2Uop7\",\"value\":\"Counter_value__17UkD\",\"buttons\":\"Counter_buttons__3tD4a\",\"buttonsCounter\":\"Counter_buttonsCounter__2QYb6\",\"button\":\"Counter_button__1ORpW\",\"maxValue\":\"Counter_maxValue__3eU55\",\"error\":\"Counter_error__2BLrA\",\"message\":\"Counter_message__2osZ6\",\"disabledBtn\":\"Counter_disabledBtn__O2CxV\",\"installationInputStyle\":\"Counter_installationInputStyle__2QQnb\",\"inputStyle\":\"Counter_inputStyle__1Ob2x\",\"errorInput\":\"Counter_errorInput__16oi2\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\ntype ButtonPropsType = {\r\n    valueBtn: string\r\n    disabledBtn: boolean\r\n    classNameBtn: string\r\n    onClickBtn: () => void\r\n}\r\n\r\nexport function Button(props: ButtonPropsType) {\r\n    return (\r\n        <button className={props.classNameBtn}\r\n                onClick={() => {\r\n                    props.onClickBtn()\r\n                }}\r\n                disabled={props.disabledBtn}>\r\n            {props.valueBtn}\r\n        </button>\r\n    )\r\n}","const initialState = {\r\n    value: 0,\r\n    startValue: 0,\r\n    maxValue: 0,\r\n    messagePointer: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const mainReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CHANGE-START-VALUE':\r\n            return {\r\n                ...state, startValue: action.value\r\n            }\r\n        case 'CHANGE-MAX-VALUE':\r\n            return {\r\n                ...state, maxValue: action.value\r\n            }\r\n        case 'CHANGE-VALUE':\r\n            return {\r\n                ...state, value: action.value\r\n            }\r\n        case 'INCREMENT-VALUE':\r\n            return {\r\n                ...state, value: action.value + 1\r\n            }\r\n        case 'MESSAGE-OFF':\r\n            return {\r\n                ...state, messagePointer: false\r\n            }\r\n        case 'MESSAGE-ON':\r\n            return {\r\n                ...state, messagePointer: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof changeValueAC> | ReturnType<typeof incValueAC> | ReturnType<typeof changeStartValueAC> | ReturnType<typeof changeMaxValueAC> | ReturnType<typeof messageOffAC> | ReturnType<typeof messageOn>\r\n\r\n\r\n\r\nexport const changeValueAC = (newValue: number) => {\r\n    return {\r\n        type: 'CHANGE-VALUE',\r\n        value: newValue,\r\n    } as const\r\n}\r\n\r\nexport const incValueAC = (newValue: number) => {\r\n    return {\r\n        type: 'INCREMENT-VALUE',\r\n        value: newValue\r\n    } as const\r\n}\r\n\r\nexport const changeStartValueAC = (newValue: number) => {\r\n    return {\r\n        type: 'CHANGE-START-VALUE',\r\n        value: newValue,\r\n    } as const\r\n}\r\n\r\nexport const changeMaxValueAC = (newValue: number) => {\r\n    return {\r\n        type: 'CHANGE-MAX-VALUE',\r\n        value: newValue,\r\n    } as const\r\n}\r\n\r\nexport const messageOffAC = () => {\r\n    return {\r\n        type: 'MESSAGE-OFF',\r\n    } as const\r\n}\r\n\r\nexport const messageOn = () => {\r\n    return {\r\n        type: 'MESSAGE-ON',\r\n    } as const\r\n}\r\n","import React from 'react';\r\nimport s from './Counter.module.css'\r\nimport {Button} from './Button';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../redux/store';\r\nimport {changeValueAC, incValueAC, InitialStateType} from '../redux/main-reducer';\r\n\r\ntype CounterPropsType = {\r\n    error: boolean\r\n}\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector<AppRootStateType, InitialStateType>(state => state.counterState)\r\n\r\n    const incValue = () => {\r\n        dispatch(incValueAC(state.value))\r\n    }\r\n\r\n    const resetValue = () => {\r\n        dispatch(changeValueAC(state.startValue))\r\n    }\r\n\r\n    const btnIncStyle = state.value === state.maxValue || props.error || state.messagePointer ? `${s.button} ${s.disabledBtn}` : s.button\r\n    const btnResetStyle = state.value === state.startValue || props.error || state.messagePointer ? `${s.button} ${s.disabledBtn}` : s.button\r\n\r\n    const disInc = state.value === state.maxValue || props.error || state.messagePointer\r\n    const disReset = state.value === state.startValue || props.error || state.messagePointer\r\n    const valueStyle = state.value === state.maxValue ? `${s.value} ${s.maxValue}` : s.value\r\n\r\n    let element = <span>{state.value}</span>\r\n    if (state.messagePointer) {\r\n        element = <span className={s.message}>enter values and press 'set'</span>\r\n    }\r\n    if (props.error) {\r\n        element = <span className={s.error}>Incorrect value!</span>\r\n    }\r\n\r\n    return (\r\n        <div className={s.counterWrapper}>\r\n            <div className={valueStyle}>{element}</div>\r\n            <div className={`${s.buttons} ${s.buttonsCounter}`}>\r\n                <Button valueBtn={'inc'}\r\n                        disabledBtn={disInc}\r\n                        classNameBtn={btnIncStyle}\r\n                        onClickBtn={incValue}\r\n                />\r\n                <Button valueBtn={'reset'}\r\n                        disabledBtn={disReset}\r\n                        classNameBtn={btnResetStyle}\r\n                        onClickBtn={resetValue}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import s from './Counter.module.css';\r\nimport React, { ChangeEvent } from 'react';\r\n\r\ntype InstallationInputType = {\r\n    setPoint: string\r\n    value: number\r\n    changeValue: (newValue: number) => void\r\n    error: boolean\r\n}\r\nexport const InstallationInput = (props: InstallationInputType) => {\r\n    const changeValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const value = Number(e.currentTarget.value);\r\n        props.changeValue(value);\r\n    }\r\n\r\n    const inputFinishStyle = props.error ? `${s.inputStyle} ${s.errorInput}` : s.inputStyle\r\n    return (\r\n        <div className={s.installationInputStyle}>\r\n            <span>{props.setPoint}:</span>\r\n            <input type='number' className={inputFinishStyle} value={props.value} onChange={changeValueHandler}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Counter.module.css'\r\nimport {Button} from './Button';\r\nimport {InstallationInput} from './InstallationInputType';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../redux/store';\r\nimport {\r\n    changeMaxValueAC,\r\n    changeStartValueAC,\r\n    changeValueAC,\r\n    InitialStateType,\r\n    messageOffAC,\r\n    messageOn\r\n} from '../redux/main-reducer';\r\n\r\ntype CounterPropsType = {\r\n    error: boolean\r\n}\r\n\r\nexport function CounterInstallation(props: CounterPropsType) {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector<AppRootStateType, InitialStateType>(state => state.counterState)\r\n\r\n    const changeMaxValue = (newValue: number) => {\r\n        dispatch(changeMaxValueAC(newValue))\r\n        dispatch(messageOn())\r\n    }\r\n    const changeStartValue = (newValue: number) => {\r\n        dispatch(changeStartValueAC(newValue))\r\n        dispatch(messageOn())\r\n    }\r\n\r\n    const getStartValueHandler = () => {\r\n        const valueAsString = localStorage.getItem('startValue')\r\n        if (valueAsString) {\r\n            const newValue = JSON.parse(valueAsString)\r\n            dispatch(changeValueAC(newValue))\r\n        }\r\n        dispatch(messageOffAC())\r\n    }\r\n\r\n    const btnSetStyle = props.error || state.messagePointer === false ? `${s.button} ${s.disabledBtn}` : s.button\r\n\r\n    return (\r\n        <div className={s.counterWrapper}>\r\n            <div className={s.value}>\r\n               <InstallationInput\r\n                   changeValue={changeMaxValue}\r\n                   value={state.maxValue}\r\n                   setPoint={'max value'}\r\n                   error={props.error}\r\n               />\r\n               <InstallationInput\r\n                   changeValue={changeStartValue}\r\n                   value={state.startValue}\r\n                   setPoint={'start value'}\r\n                   error={props.error}\r\n               />\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <Button\r\n                    valueBtn={'set'}\r\n                    disabledBtn={props.error}\r\n                    classNameBtn={btnSetStyle}\r\n                    onClickBtn={getStartValueHandler}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Counter} from './components/Counter';\nimport { CounterInstallation } from './components/CounterInstallation';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from './redux/store';\nimport {\n    changeMaxValueAC,\n    changeStartValueAC,\n    changeValueAC,\n    InitialStateType,\n} from './redux/main-reducer';\n\nfunction App() {\n\n    const dispatch = useDispatch()\n    const state = useSelector<AppRootStateType, InitialStateType>(state => state.counterState)\n\n    let error = state.startValue >= state.maxValue || state.startValue < 0 || state.maxValue < 0\n\n    useEffect(() => {\n        const maxValueAsString = localStorage.getItem('maxValue')\n        if (maxValueAsString) {\n            const value = JSON.parse(maxValueAsString)\n            dispatch(changeMaxValueAC(value))\n        }\n        const startValueAsString = localStorage.getItem('startValue')\n        if (startValueAsString) {\n            const value = JSON.parse(startValueAsString)\n            dispatch(changeStartValueAC(value))\n            dispatch(changeValueAC(value))\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem('maxValue', JSON.stringify(state.maxValue))\n    }, [state.maxValue])\n\n    useEffect(() => {\n        localStorage.setItem('startValue', JSON.stringify(state.startValue))\n    },[state.startValue])\n    console.log(state.messagePointer)\n\n    return (\n        <div className='appWrapper'>\n            <CounterInstallation\n                error={error}\n            />\n            <Counter\n                error={error}\n            />\n\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore} from 'redux';\r\nimport {mainReducer} from './main-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    counterState: mainReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}